import e from"csv-parser";import{csvFormat as t}from"d3-dsv";import r from"node:fs";import n from"node:path";import"dotenv/config";import{spawn as s}from"node:child_process";import{Client as o,GatewayIntentBits as a,SnowflakeUtil as i}from"discord.js";function d(e,t){const[,,...r]=process.argv;return!!r.includes(e)||!(!t||!r.includes(t))}function c(e,t){const[,,...r]=process.argv;if(r.includes(e)){const t=r.at(r.indexOf(e)+1);return t?.startsWith("-")?void 0:t}if(t&&r.includes(t)){const e=r.at(r.indexOf(t)+1);return e?.startsWith("-")?void 0:e}}async function u(t){return new Promise((n=>{const s=[];if(!r.existsSync(t))return n(s);r.createReadStream(t).pipe(e({mapValues:({header:e,value:t})=>"date"===e?+t:t})).on("data",(e=>s.push(e))).on("end",(()=>n(s)))}))}async function l(e,s){const o=n.dirname(e);return r.existsSync(o)||r.mkdirSync(o,{recursive:!0}),new Promise(((n,o)=>{const a=t(s);r.writeFile(e,a,(e=>{if(e)return o(e);n()}))}))}const p=1431468e6;function g(e,t=[a.GuildMembers,a.GuildMessages,a.MessageContent,a.Guilds]){const r=process.env.DISCORD_CHANNEL_ID,n=process.env.DISCORD_TOKEN;if(!r)throw new Error("CHANNEL_ID is required");if(!n)throw new Error("TOKEN is required");const s=new o({intents:t});return new Promise(((t,o)=>{s.login(n),s.on("error",(()=>{s.destroy(),o()})),s.on("ready",(async()=>{const n=s.channels.cache.get(r);if(!n)throw new Error("Channel not found");const o=await e(s,n);s.destroy(),t(o)}))}))}const m=async()=>g((async e=>e.user?.id||""));function f(e){const t=i.timestampFrom(e),r=new Date(t);return`${r.getFullYear()}-${(r.getMonth()+1).toString().padStart(2,"0")}-${r.getDate().toString().padStart(2,"0")} ${r.getHours().toString().padStart(2,"0")}:${r.getMinutes().toString().padStart(2,"0")}:${r.getSeconds().toString().padStart(2,"0")}`}async function h(e){const t=["cd download",`git add ${e}`,`git commit -m "${(new Date).toDateString()}"`,"git push origin main --force"];return new Promise((e=>{const r=s(t.join(" && "),{shell:!0});r.stdout.pipe(process.stdout),r.stderr.pipe(process.stderr),r.on("close",(()=>e())),r.on("disconnect",(()=>e())),r.on("exit",(()=>e()))}))}const w=function(){const e=new Set,t=new Map;return{get allFetched(){return t.size===e.size},get users(){return[...t.values()]},getUser:e=>t.get(e),add(t){return e.add(t),this},addFromCache(r){return e.has(r.id)||(this.add(r.id),t.set(r.id,r)),this},fetch:async()=>g((async(r,n)=>{(await n.guild.members.fetch()).forEach((r=>{if(!e.has(r.id))return;const{id:n,displayName:s,displayHexColor:o}=r,a=r.displayAvatarURL();t.set(n,{id:n,color:o,name:s,avatarUrl:a})}))}))}}();function S(){const e=new Set,t=new Map,r=new Map;return{get newSongs(){return[...t.values()]},get newSongsCount(){return t.size},get allSongs(){return[...r.values(),...t.values()]},has:t=>e.has(t),add(r){return e.has(r.url)||(e.add(r.url),t.set(r.url,r)),this},addFromCache(n){return e.has(n.url)||(e.add(n.url),r.set(n.url,n),t.delete(n.url)),this}}}const v=S(),y=S();export{w as a,f as b,d as c,m as d,l as e,h as f,c as g,p as h,u as l,y as o,v as s,g as u};
